import { Component, OnInit, Inject } from '@angular/core';
import { MatDialogRef, MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { DataService } from 'src/app/data.service';
import { map } from 'rxjs/operators';
import { DomSanitizer } from '@angular/platform-browser';


@Component({
  selector: 'app-credit-to-approve',
  templateUrl: './credit-to-approve.component.html',
  styleUrls: ['./credit-to-approve.component.scss']
})
export class CreditToApproveComponent implements OnInit {
  // public requestActionForm:FormGroup;
  
  // newMessage = {
  //   comment:'',
  //   status:false
  // }
  loading: boolean;
  doc: any = `data:image/png;base64, UEsDBBQABgAIAAAAIQAykW9XZgEAAKUFAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0lMtqwzAQRfeF/oPRtthKuiilxMmij2UbaPoBi
  jRORPVCo7z+vuM4MaUkMTTJxiDP3HvPCDGD0dqabAkRtXcl6xc9loGTXmk3K9nX5C1/ZBkm4ZQw3kHJNoBsNLy9GUw2ATAjtcOSzVMKT5yjnIMVWPgAjiqVj1YkOsYZD0J+ixnw+17vgUvvEriUp9qDDQcvUImFSdnrmn43JBEMsuy5aayzSiZCMFqKRHW+dOpPS
  r5LKEi57cG5DnhHDYwfTKgrxwN2ug+6mqgVZGMR07uw1MVXPiquvFxYUhanbQ5w+qrSElp97Rail4BId25N0Vas0G7Pf5TDLewUIikvD9Jad0Jg2hjAyxM0vt3xkBIJrgGwc+5EWMH082oUv8w7QSrKnYipgctjtNadEInWADTf/tkcW5tTkdQ5jj4grZX4j7H3e6NW5zRwgJj06VfXJpL12fNBvZIUqAPZfLtkhz8AAAD//wMAUEsDBBQABgAIAAAAIQAekRq37wAAAE4CAAALAAgCX3JlbHMvLnJlbHMgogQCKKAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
rJLBasMwDEDvg/2D0b1R2sEYo04vY9DbGNkHCFtJTBPb2GrX/v082NgCXelhR8vS05PQenOcRnXglF3wGpZVDYq9Cdb5XsNb+7x4AJWFvKUxeNZw4gyb5vZm/cojSSnKg4tZFYrPGgaR+IiYzcAT5SpE9uWnC2kiKc/UYySzo55xVdf3mH4zoJkx1dZqSFt7B6o9Rb6GHbrOGX4KZj+xlzMtkI/C3rJdxFTqk7gyjWop9SwabDAvJZyRYqwKGvC80ep6o7+nxYmFLAmhCYkv+3xmXBJa/ueK5hk/Nu8hWbRf4W8bnF1B8wEAAP//AwBQSwMEFAAGAAgAAAAhALO+ix0FAQAAtgMAABwACAF3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzIKIEASigAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArJPNasMwEITvhb6D2HstO21DCZFzKYFcW/cBZHv9Q/VjpE1av31FShKHBtODjjNiZ76F1XrzrRU7oPO9NQKyJAWGprJ1b1oBH8X24QWYJ2lqqaxBASN62OT3d+s3VJLCkO/6wbOQYryAjmhYce6rDrX0iR3QhJfGOi0pSNfyQVafskW+SNMld9MMyK8y2a4W4Hb1I7BiHPA/2bZp+gpfbbXXaOhGBfdIFDbzIVO6FknAyUlCFvDbCIuoCDQqnAIc9Vx9FrPe7HWJLmx8IThbcxDLmBAUZvECcJS/ZjbH8ByTobGGClmqCcfZmoN4ignxheX7n5OcmCcQfvXb8h8AAAD//wMAUEsDBBQABgAIAAAAIQBnWeiFTQsAAP9CAAARAAAAd29yZC9kb2N1bWVudC54bWzcXFtv6zYSfl9g/4Pgp10gjXnTLWiykCipCNAWQdNtHxeMRNvC0W0lOW76tH9j/97+kh3q4ovsnCM7Pk3c8xBZFDkkv5n5ZkhR59t//JYm2rMsqzjPbif4Gk00mYV5FGfz28k/fw6+sSZaVYssEkmeydvJi6wm/7j761++Xd1EebhMZVZrICKrblZFeDtZ1HVxM51W4UKmorpO47DMq3xWX4d5Os1nsziU01VeRlOCMGp+FWUeyqqC/rjInkU16cSFv42TFpViBY2VQDYNF6Ks5W8bGfhoIfrUnlr7gsgJgmCGBO+LokeLMqZqVHuC2EmCYFR7kvTTJB2YnHGaJLIvyTxNEt2XZJ0mac+c0n0DzwuZwcNZXqaihttyPk1F+WlZfAOCC1HHT3ES1y8gExm9GBFnn04YEbRaS0hpdLQEc5rmkUxo1EvJbyfLMrvp2n+zbq+GftO27y59i3LM/NsmXkcOzcynpUwAizyrFnGx9vD0VGnwcNELef7cJJ7TpK+3KvBId3mNnrwWyo3AMcPv8E+TduSfl4jRCI0oEesWY4aw22c/khSscNPxSdBsgYtHEkgvgOwJMMJ4pEn3Mlo0YT7QcktOJY8To/diqpd04+qrYv42a/muzJfFRlr8Nmn3G99fqSh8hKzO6rY9oXrbYB4XogBKSMOb+3mWl+IpgRGBDWlgBlqjAfUXtKIpp5vcQarwlEcv6lrAE3ZTiFLcg7YxsXyGLEg5VCkQba1KDcoIIa4HpTeQlkQ/3U4QQo5JgmBd5MmZWCa1emL5ZqC3vRQPpbqU7eVpqv4uocmzSG4nauSJnEDhtKsy3bQ4ptnqpr5zRfZJc8IwX0L684PIxFwqelJ16rZmK35/zqZLXctAfHfOVLeJ4Qd0Z87dzF6fczPSXfHMc03CkTWANDB1mxFVeoT47snDYZSLx/olkT1M38dV/QBjmJeiWLQDy5ZpWzNOnpO+Hlo/u4/6Mtyh2zUYqKW+C/JSE5HKSDWRaaJF/UoTmmI5bRXXi7UqQMSTLK/W9/VLIaFRpLm//KhVi3yZRNqT1P
  
  
  gAAAAhAHBrJcnJAQAAiwUAABIAAAAAAAAAAAAAAAAAvjcAAHdvcmQvZm9udFRhYmxlLnhtbFBLBQYAAAAADAAMAAEDAAC3OQAAAAA=`
  
  constructor(
    @Inject(MAT_DIALOG_DATA) private selectedRequest:any,
    private dialogRef: MatDialogRef<CreditToApproveComponent>,
    private formBuilder: FormBuilder,
    private domSanitizer:DomSanitizer,
    private data:DataService,
    private snackBar:MatSnackBar) { }

  ngOnInit() {
    console.log(this.selectedRequest);
    this.request()
    
    // this.requestActionForm = this.formBuilder.group({
    //   'comment':['', Validators.required],
    //   'status':['', Validators.required],
    // })
  }

  transform(){
    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.doc);
  }

  request(){
    // if(this.requestActionForm.invalid){
    //   return;
    // }
    this.loading = true;

    // let form = this.requestActionForm
    // this.newMessage.comment = form.get('comment').value;
    // this.newMessage.status = form.get('status').value;

    this.data.creditService.previewBankStatement(this.selectedRequest.id)
    .pipe(
      map( res => res['data'])
    )
    .subscribe( (res) => {
      this.loading = false;
      this.doc = 'data:image/png;base64,'+ res;
      // this.dialogRef.close();
      this.snackBar.open('DOne',"Dismiss", {
        duration:2000
      })
    }, err => {
      this.loading = false;
      this.snackBar.open("Error! try again","Dismiss",{
        duration:2000
      })
    })
  }

  approveCredit(){}

  closeDialog(){
    this.dialogRef.close();
    event.preventDefault();
  }
}
